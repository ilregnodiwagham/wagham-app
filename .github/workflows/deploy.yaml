name: Release management

on:
  pull_request:
    types:
      - closed
    branches:
      - 'main'

jobs:
  if_merged:
    name: Create Docker File & Deploy on server
    if: github.event.pull_request.merged == true && (contains(github.event.pull_request.labels.*.name, 'major') || contains(github.event.pull_request.labels.*.name, 'minor') || contains(github.event.pull_request.labels.*.name, 'patch'))
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - run: git config --global user.email "rapa@ilregnodiwagham.it"
      - run: git config --global user.name "Il Regno di Wagham"
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '16.x'
          registry-url: 'https://registry.npmjs.org'

      - name: Creation new version (Major) üè∑Ô∏è
        if: ${{ contains(github.event.pull_request.labels.*.name, 'major') }}
        run: npm version major | sed "s/v/CURRENT_VERSION=/g" >> $GITHUB_ENV
      - name: Creation new version (Minor) üè∑Ô∏è
        if: ${{ contains(github.event.pull_request.labels.*.name, 'minor') }}
        run: npm version minor | sed "s/v/CURRENT_VERSION=/g" >> $GITHUB_ENV
      - name: Creation new version (Patch) üè∑Ô∏è
        if: ${{ contains(github.event.pull_request.labels.*.name, 'patch') }}
        run: npm version patch | sed "s/v/CURRENT_VERSION=/g" >> $GITHUB_ENV
      - name: Push commit and tag ‚ÜóÔ∏è
        run: git push --follow-tags -f

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: testadirapa/wagham-app:$CURRENT_VERSION,testadirapa/wagham-app:latest

      - name: Deploy on Remote Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            docker rm -f -v wagham-app
            docker image prune
            docker run -d --name wagham-app -p 16171:80 testadirapa/wagham-app:latest

